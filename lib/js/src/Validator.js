// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Validator__Core = require("./Validator__Core.js");
var Validator__StringValidators = require("./Validator__StringValidators.js");

var myValidator = Curry._2(Validator__Core.Impl.Infix.$pipe$pipe, Curry._2(Validator__Core.Impl.Infix.$pipe$pipe, Validator__StringValidators.isLongerThan(10), Validator__StringValidators.isLongerThan(11)), Validator__StringValidators.isLongerThan(12));

console.log("Validator:", myValidator);

var result = Validator__Core.validate(undefined, myValidator, "Hello");

if (result.TAG === /* Ok */0) {
  console.log(result._0);
} else {
  console.log(result._0.errors);
}

function F(T) {
  return {};
}

function Newtype(T) {
  var Id = Caml_exceptions.create("Validator.Newtype(T).Id");
  var id = {
    RE_EXN_ID: Id
  };
  return {
          Id: Id,
          id: id
        };
}

function newtype(value) {
  var Id = Caml_exceptions.create("Validator.Newtype(T).Id");
  var id = {
    RE_EXN_ID: Id
  };
  var id$1 = {
    Id: Id,
    id: id
  };
  return {
          value: value,
          id: id$1
        };
}

exports.myValidator = myValidator;
exports.result = result;
exports.F = F;
exports.Newtype = Newtype;
exports.newtype = newtype;
/* myValidator Not a pure module */
