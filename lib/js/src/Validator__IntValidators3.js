// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Validator__Core3 = require("./Validator__Core3.js");

function _stringify(x) {
  return String(x);
}

function isGreaterThan(n) {
  var nStr = String(n);
  var name = "greaterThan(" + nStr + ")";
  return Validator__Core3.make(name, (function (value) {
                return Validator__Core3.defaultErrorMessage(_stringify, name, value);
              }), (function (value) {
                return value > n;
              }));
}

function isLessThan(n) {
  var nStr = String(n);
  var name = "isLessThan(" + nStr + ")";
  return Validator__Core3.make(name, (function (value) {
                return Validator__Core3.defaultErrorMessage(_stringify, name, value);
              }), (function (value) {
                return value < n;
              }));
}

function isMultipleOf(n) {
  var nStr = String(n);
  var name = "isMultipleOf(" + nStr + ")";
  return Validator__Core3.make(name, (function (value) {
                return Validator__Core3.defaultErrorMessage(_stringify, name, value);
              }), (function (value) {
                if (n === 0) {
                  return value === 0;
                } else {
                  return Caml_int32.mod_(value, n) === 0;
                }
              }));
}

var Impl = {
  isGreaterThan: isGreaterThan,
  isLessThan: isLessThan,
  isMultipleOf: isMultipleOf
};

exports.Impl = Impl;
exports.isGreaterThan = isGreaterThan;
exports.isLessThan = isLessThan;
exports.isMultipleOf = isMultipleOf;
/* No side effect */
